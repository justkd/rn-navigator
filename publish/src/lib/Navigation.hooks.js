"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.useNavigationHooks=void 0;const react_1=require("react"),Navigation_tokens_1=require("./Navigation.tokens"),useNavigationHooks=(state,dispatch,initialRoute,animations,props)=>{(0,react_1.useEffect)((()=>{state.queue.length||dispatch({type:"init",event:initialRoute})}),[initialRoute,state,dispatch]),(0,react_1.useEffect)((()=>{if(state.queue.length>1)return state.queue[1].to===Navigation_tokens_1.backToken?state.history.length?void animations.backOut.start((()=>{animations.reset((()=>{dispatch({type:"go_back_in_history"}),animations.backIn().start((()=>{dispatch({type:"end_navigation_animation"})}))}))})):(animations.error().start(),void dispatch({type:"go_back_in_history"})):void animations.out.start((()=>{animations.reset((()=>{dispatch({type:"go_forward_in_history"}),animations.in.start((()=>{dispatch({type:"end_navigation_animation"})}))}))}))}),[state,animations,dispatch]),(0,react_1.useEffect)((()=>()=>{if(props.topLevelController)return;const msg="Your broke it. A top level navigation controller was dismounted. It should not dismount.";console.log(msg)}),[props.topLevelController]),(0,react_1.useEffect)((()=>(animations.in.start(),()=>{if(props.topLevelController)return;const msg="Your broke it. A top level navigation controller was dismounted. It should not dismount.";console.log(msg)})),[])};exports.useNavigationHooks=useNavigationHooks;